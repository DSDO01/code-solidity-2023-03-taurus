{
  "address": "0x5D2ab955294e2D1ec042f102Dc3C1d20b469E40f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "incorrectOutputToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        }
      ],
      "name": "approveTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_outputToken",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_swapData",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "args": [
    "0xE592427A0AEce92De3Edee1F18E0157C05861564"
  ],
  "numDeployments": 1,
  "solcInputHash": "905c5c68041e852c361757098a1bcca2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"incorrectOutputToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"}],\"name\":\"approveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_outputToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_swapData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"this contract exposes necessary logic to swap between tokens using Uniswap. note that it should only hold tokens mid-transaction. Any tokens transferred in outside of a swap can be stolen.\",\"kind\":\"dev\",\"methods\":{\"approveTokens(address)\":{\"details\":\"approve any token to the swapRouter. note this is calleable by anyone.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapAdapters/UniswapSwapAdapter.sol\":\"UniswapSwapAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/SwapAdapters/ISwapRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\n// Simple SwapRouter interface to allow the UniswapSwapAdapter to be compiled in 0.8.17\\r\\ninterface ISwapRouter02 {\\r\\n    struct ExactInputParams {\\r\\n        bytes path;\\r\\n        address recipient;\\r\\n        uint256 deadline;\\r\\n        uint256 amountIn;\\r\\n        uint256 amountOutMinimum;\\r\\n    }\\r\\n\\r\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x86d756ca7675d73cbc6b84b444504d48342d098d7cad6544375b465d1e67e9dc\",\"license\":\"MIT\"},\"contracts/SwapAdapters/UniswapSwapAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport { ISwapRouter02 } from \\\"./ISwapRouter02.sol\\\";\\r\\n\\r\\nerror incorrectOutputToken();\\r\\n\\r\\n/**\\r\\n * @dev this contract exposes necessary logic to swap between tokens using Uniswap.\\r\\n * note that it should only hold tokens mid-transaction. Any tokens transferred in outside of a swap can be stolen.\\r\\n */\\r\\ncontract UniswapSwapAdapter {\\r\\n    address public immutable swapRouter;\\r\\n\\r\\n    constructor(address _swapRouter) {\\r\\n        swapRouter = _swapRouter;\\r\\n    }\\r\\n\\r\\n    // exactInput\\r\\n    function swap(address _outputToken, bytes calldata _swapData) external returns (uint256) {\\r\\n        // Decode swap data\\r\\n        (uint256 deadline, uint256 _amountIn, uint256 _amountOutMinimum, bytes memory _path) = abi.decode(\\r\\n            _swapData,\\r\\n            (uint256, uint256, uint256, bytes)\\r\\n        );\\r\\n\\r\\n        // Check that the outputToken is the final token in the path\\r\\n        uint256 length = _swapData.length;\\r\\n        address swapOutputToken = address(bytes20(_swapData[length - 41:length - 21]));\\r\\n\\r\\n        if (swapOutputToken != _outputToken) {\\r\\n            // The keeper-inputted Output Token differs from what the contract says it must be.\\r\\n            revert incorrectOutputToken();\\r\\n        }\\r\\n\\r\\n        // Perform swap (this will fail if tokens haven't been transferred in, or haven't been approved)\\r\\n        ISwapRouter02.ExactInputParams memory params = ISwapRouter02.ExactInputParams({\\r\\n            path: _path,\\r\\n            recipient: msg.sender,\\r\\n            deadline: deadline,\\r\\n            amountIn: _amountIn,\\r\\n            amountOutMinimum: _amountOutMinimum\\r\\n        });\\r\\n\\r\\n        return ISwapRouter02(swapRouter).exactInput(params);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev approve any token to the swapRouter.\\r\\n     * note this is calleable by anyone.\\r\\n     */\\r\\n    function approveTokens(address _tokenIn) external {\\r\\n        IERC20(_tokenIn).approve(swapRouter, type(uint256).max);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x51d2b92c92021848cc67c60efcfb622be54f17202cd491aef3b5c9d5a897ca69\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161065538038061065583398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516105be6100976000396000818160600152818160d7015261020901526105be6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806328a2234814610046578063c31c9c071461005b578063e35473351461009f575b600080fd5b6100596100543660046102b4565b6100c0565b005b6100827f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b26100ad3660046102d6565b610158565b604051908152602001610096565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b3906044016020604051808303816000875af1158015610130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101549190610359565b5050565b60008080808061016a86880188610391565b92965090945092509050856000888261018460298261045f565b9061019060158661045f565b9261019d93929190610486565b6101a6916104b0565b60601c90506001600160a01b038a1681146101d4576040516339a40be560e11b815260040160405180910390fd5b6040805160a0810182528481523360208201528082018890526060810187905260808101869052905163c04b8d5960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c04b8d59906102469084906004016104e5565b6020604051808303816000875af1158015610265573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610289919061056f565b9b9a5050505050505050505050565b80356001600160a01b03811681146102af57600080fd5b919050565b6000602082840312156102c657600080fd5b6102cf82610298565b9392505050565b6000806000604084860312156102eb57600080fd5b6102f484610298565b9250602084013567ffffffffffffffff8082111561031157600080fd5b818601915086601f83011261032557600080fd5b81358181111561033457600080fd5b87602082850101111561034657600080fd5b6020830194508093505050509250925092565b60006020828403121561036b57600080fd5b815180151581146102cf57600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156103a757600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff808211156103d457600080fd5b818701915087601f8301126103e857600080fd5b8135818111156103fa576103fa61037b565b604051601f8201601f19908116603f011681019083821181831017156104225761042261037b565b816040528281528a602084870101111561043b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b8181038181111561048057634e487b7160e01b600052601160045260246000fd5b92915050565b6000808585111561049657600080fd5b838611156104a357600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156104dd5780818660140360031b1b83161692505b505092915050565b60006020808352835160a08285015280518060c086015260005b8181101561051b5782810184015186820160e0015283016104ff565b50600060e08287010152918501516001600160a01b0381166040860152916040860151606086015260608601516080860152608086015160a086015260e0601f19601f830116860101935050505092915050565b60006020828403121561058157600080fd5b505191905056fea2646970667358221220911412a25bdc65ab7c6a934a38291127dca84a3c46ef126c889297eda9ecf48e64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806328a2234814610046578063c31c9c071461005b578063e35473351461009f575b600080fd5b6100596100543660046102b4565b6100c0565b005b6100827f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b26100ad3660046102d6565b610158565b604051908152602001610096565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b3906044016020604051808303816000875af1158015610130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101549190610359565b5050565b60008080808061016a86880188610391565b92965090945092509050856000888261018460298261045f565b9061019060158661045f565b9261019d93929190610486565b6101a6916104b0565b60601c90506001600160a01b038a1681146101d4576040516339a40be560e11b815260040160405180910390fd5b6040805160a0810182528481523360208201528082018890526060810187905260808101869052905163c04b8d5960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c04b8d59906102469084906004016104e5565b6020604051808303816000875af1158015610265573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610289919061056f565b9b9a5050505050505050505050565b80356001600160a01b03811681146102af57600080fd5b919050565b6000602082840312156102c657600080fd5b6102cf82610298565b9392505050565b6000806000604084860312156102eb57600080fd5b6102f484610298565b9250602084013567ffffffffffffffff8082111561031157600080fd5b818601915086601f83011261032557600080fd5b81358181111561033457600080fd5b87602082850101111561034657600080fd5b6020830194508093505050509250925092565b60006020828403121561036b57600080fd5b815180151581146102cf57600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156103a757600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff808211156103d457600080fd5b818701915087601f8301126103e857600080fd5b8135818111156103fa576103fa61037b565b604051601f8201601f19908116603f011681019083821181831017156104225761042261037b565b816040528281528a602084870101111561043b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b8181038181111561048057634e487b7160e01b600052601160045260246000fd5b92915050565b6000808585111561049657600080fd5b838611156104a357600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156104dd5780818660140360031b1b83161692505b505092915050565b60006020808352835160a08285015280518060c086015260005b8181101561051b5782810184015186820160e0015283016104ff565b50600060e08287010152918501516001600160a01b0381166040860152916040860151606086015260608601516080860152608086015160a086015260e0601f19601f830116860101935050505092915050565b60006020828403121561058157600080fd5b505191905056fea2646970667358221220911412a25bdc65ab7c6a934a38291127dca84a3c46ef126c889297eda9ecf48e64736f6c63430008110033",
  "devdoc": {
    "details": "this contract exposes necessary logic to swap between tokens using Uniswap. note that it should only hold tokens mid-transaction. Any tokens transferred in outside of a swap can be stolen.",
    "kind": "dev",
    "methods": {
      "approveTokens(address)": {
        "details": "approve any token to the swapRouter. note this is calleable by anyone."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}